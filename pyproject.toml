[project]
name = "apimoex"
version = "1.4.0"
description = "MOEX ISS API"
authors = [
    { name = "Mikhail Korotkov aka WLMike", email = "wlmike@gmail.com" }
]
dependencies = [
    "requests>=2.31.0",
]
readme = "README.rst"
requires-python = ">=3.10"
license = { text = "http://unlicense.org" }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pandas>=2.1.4",
    "pyright>=1.1.345",
    "pytest>=7.4.4",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.11",
    "sphinx>=7.2.6",
    "aiohttp_theme>=0.1.6",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.pyright]
verboseOutput = true
pythonVersion = "3.10"
typeCheckingMode = "strict"

[tool.pytest.ini_options]
addopts = "--cov-report=term-missing --setup-show --verbose"

[tool.coverage.run]
branch = true

[tool.ruff]
line-length = 120
select = ["ALL"]
fixable = ["ALL"]
fix = true

ignore = [
    "ANN101",   # Missing-type-self
    "COM812",   # Missing-trailing-comma - ruff format recommendations
    "D203",     # One-blank-line-before-class (D203) and no-blank-line-before-class (D211) are incompatible
    "D213",     # Multi-line-summary-first-line (D212) and multi-line-summary-second-line (D213) are incompatible
    "EM101",    # Exception must not use a string literal, assign to variable first - don't like many exceptions
    "EM102",    # Exception must not use an f-string literal, assign to variable first - don't like many exceptions
    "ISC001",   # Single-line-implicit-string-concatenation - ruff format recommendations
    "PLR0913",  # Too many arguments in function definition - required in this library
    "RUF001",   # Ambiguous-unicode-character-string - russian
    "RUF002",   # Ambiguous-unicode-character-docstring - russian
    "RUF003",   # Ambiguous-unicode-character-comment - russian
    "TRY003",   # Avoid specifying long messages outside the exception class - don't like many exceptions
]
